@model ChefViewModel

<link href="~/css/chefIndex.css" rel="stylesheet" />

<h2> New orders:</h2>
<div class="table-responsive fixed-table-body newOrders">
    <table id="ordersTable" class="table table-striped table-bordered">
        <thead>
            <tr>
                <th class="th-sm">
                    Table
                </th>
                <th class="th-sm">
                    Date
                </th>
                <th class="th-sm">
                    Client Name
                </th>
                <th class="th-sm">
                    Status
                </th>
                <th class="th-sm">
                    Price
                </th>
                <th class="th-sm" width="160px">
                    Action
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.NewOrders)
            {
                <tr>
                    <th class="th-sm">
                        @item.TableNumber
                    </th>
                    <th class="th-sm">
                        @item.Date.ToLocalTime()
                    </th>
                    <th class="th-sm">
                        @item.FirstName @item.LastName
                    </th>
                    <th class="th-sm">
                        @item.Status
                    </th>
                    <th class="th-sm">
                        @item.Price.ToString("0.00")$
                    </th>
                    <th class="th-sm">
                        <form method="post" style="display: inline-block;" data-orderId="@item.Id">
                            <input name="id" value="@item.Id" hidden />
                            <button class="btn btn-success accept">Accept</button>
                        </form>
                        <form method="get" asp-controller="Order" asp-action="Index" asp-route-id="@item.Id" style='display:inline-block;'>
                            <button class="btn btn-info">Info</button>
                        </form>
                    </th>
                </tr>
            }
        </tbody>
    </table>
</div>


<h2>Foods to prepare:</h2>

<div class="activeOrders">
    @foreach (var foodType in Model.FoodTypes)
    {
        <div class="table-responsive fixed-table-body foodItem col-md-4" style="display: inline-block; margin-right: -4px;">
            <h2 style="display: inline; text-align: center;">@foodType.CategoryName</h2>
            <table id="ordersTable" class="table table-striped table-bordered">
                <thead>
                    <tr>
                        <th class="th-sm">
                            Food
                        </th>
                        <th class="th-sm">
                            Count
                        </th>
                        <th class="th-sm" width="160px">
                            Action
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in foodType.ItemsToCook)
                    {
                        <tr>
                            <th class="th-sm">
                                @item.FoodName
                            </th>
                            <th class="th-sm count">
                                @item.Count
                            </th>
                            <th class="th-sm">
                                <form method="post" data-orderId="@item.OrderId" data-foodId="@item.FoodId" data-dishType="@foodType.FoodType" data-count="@item.Count">
                                    <button class="btn-success ready" style="display:inline;">Ready</button>
                                </form>
                            </th>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    }
</div>

@section Scripts{
    <script src="~/lib/signalR/dist/browser/signalr.js"></script>   
    <script src="~/js/notifications.js"></script>


    <script>
        var connection = new signalR.HubConnectionBuilder()
            .withUrl("/orderHub")
            .build();

        $('#ordersTable').on('click', '.accept', function (e) {
            e.preventDefault();
            let form = e.target.parentElement;
            let orderId = form.dataset.orderid;
            connection.invoke("ChefApproveOrder", orderId);
            successNotification("You got the order!");
            form.parentElement.parentElement.remove();
        })

        connection.on("AddItemsToPickup", function (items) {
            let tableDivs = document.querySelectorAll('.activeOrders div');

            for (var i = 0; i < items.itemsToCook.length; i++) {
                let categoryItem = items.itemsToCook[i];

                // Getting the tBodyElement
                let tBody;
                for (var j = 0; j < tableDivs.length; j++) {
                    let h2Text = tableDivs[j].querySelector('h2').innerHTML;
                    if (h2Text === categoryItem.categoryName) {
                        tBody = tableDivs[j].querySelector('tbody');
                        break;
                    }
                }

                for (var j = 0; j < categoryItem.itemsToCook.length; j++) {
                    let item = categoryItem.itemsToCook[j];

                    let trElement = document.createElement('tr');
                    let th1 = getThElement(item.foodName);
                    let th2 = getThElement(item.count);
                    th2.classList.add('count')
                    let th3 = document.createElement('th');
                    th3.classList.add('th-sm');

                    let formElement = document.createElement('form');
                    formElement.dataset.orderid = item.orderId;
                    formElement.dataset.foodid = item.foodId;
                    let foodType = 'Dish';
                    if (categoryItem.foodType === 1) {
                        foodType = 'Drink';
                    }
                    formElement.dataset.dishtype = foodType;
                    formElement.dataset.count = item.count;

                    let buttonElement = document.createElement('button');
                    buttonElement.classList.add('btn-success', 'ready');
                    buttonElement.innerHTML = 'Ready';

                    formElement.appendChild(buttonElement);
                    th3.appendChild(formElement);

                    trElement.appendChild(th1);
                    trElement.appendChild(th2);
                    trElement.appendChild(th3);

                    tBody.appendChild(trElement);
                }
            }
        })

        connection.on("NewChefOrder", function (item) {

            let dateUtc = new Date(Date.parse(item.date));
            let userTimeZoneOffset = new Date().getTimezoneOffset();
            dateUtc.setMinutes(dateUtc.getMinutes() - userTimeZoneOffset);
            let date = dateUtc.toLocaleString();
            let name = item.name;
            let status = item.statusName;
            let price = item.price.toFixed(2);
            let orderId = item.orderId;


            let trHtml = `<tr>
                        <th class="th-sm" >
                            1
                            </th >
                            <th class="th-sm">
                            ${date}
                            </th>
                            <th class="th-sm">
                            ${name}
                            </th>
                            <th class="th-sm">
                            ${status}
                            </th>
                            <th class="th-sm">
                            ${price}$
                            </th>
                            <th class="th-sm">
                                <form method="post" style="display: inline-block;" data-orderId="${orderId}">
                                    <button class="btn btn-success accept">Accept</button>
                                </form>
                                <form method="get" style='display:inline-block;' action="/Order/Index/${orderId}">
                                    <button class="btn btn-info">Info</button>
                                </form>
                            </th>
                        </tr >`;

            let tbodyElement = document.querySelector('#ordersTable tbody');

            tbodyElement.insertAdjacentHTML('beforeend', trHtml);
        })

        $(".activeOrders").on('click', '.ready', function (e) {
            e.preventDefault();
            let form = e.target.parentElement;
            let orderId = form.dataset.orderid;
            let foodId = form.dataset.foodid;
            let dishType = form.dataset.dishtype;
            let count = --form.dataset.count;
            var item = { orderId: orderId, foodId: foodId, foodType: dishType };
            connection.invoke("AddPickupItem", item);
            if (count == 0) {
                form.parentElement.parentElement.remove();
            } else {
                form.parentElement.parentElement.querySelector(".count").innerHTML = count;
            }
            successNotification('Successfully made the ' + dishType.toLowerCase() + '!');
        });

        connection.start().catch(function (err) {
            return console.error(err.toString());
        });

        function getThElement(value) {
            let th1 = document.createElement('th');
            th1.classList.add('th-sm')
            th1.innerHTML = value;
            return th1;
        }
    </script>
}