@model List<OrderViewModel>

<table class="table table-striped table-bordered table-hover">
    <thead class="thead-dark">
        <tr>
            <th scope="col" style="width: 330px">Order ID</th>
            <th scope="col" style="width: 200px">Date</th>
            <th scope="col">Price</th>
            <th scope="col">Status</th>
            <th scope="col" style="width: 160px">Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@item.Id</td>
                <td>@item.Date.ToLocalTime().ToString("dd/MM/yyyy HH:mm:ss")</td>
                <td>@Math.Round(item.Price, 2)$</td>
                <td>@item.Status</td>
                <td>
                    <form method="post" asp-controller="Order" asp-action="Edit">
                        <input hidden name="orderId" value="@item.Id" />
                        @if (item.Status == RestaurantMenuProject.Data.Models.Enums.ProcessType.Pending)
                        {
                            <button type="button" class="btn btn-danger remove">Delete</button>
                            <button type="submit" class="btn btn-info edit">Edit</button>
                        }
                        else
                        {
                            <span>No actions available!</span>
                        }
                    </form>
                </td>
            </tr>
        }
    </tbody>
</table>

@section Scripts{
    <script src="~/js/notifications.js"></script>
    <script>
        $('.remove').click(function (e) {

            var form = e.target.parentElement;

            var orderId = form.querySelector('input[name=orderId]').value;
            var antiForgeryToken = $('input[name=__RequestVerificationToken]').val();
            var orderDto = { orderId };
            var data = JSON.stringify(orderDto);

            $.ajax({
                type: 'POST',
                url: '/api/Order/Delete',
                data: data,
                headers: {
                    'X-CSRF-TOKEN': antiForgeryToken
                },
                contentType: 'application/json',
                success: function (res) {
                    if (res) {
                        form.parentElement.parentElement.remove();
                        successNotification('You successfully removed your order!');
                    } else {
                        dangerNotification("The order must be pending!");
                    }

                },
                error: function (res) {
                    dangerNotification('Something went wrong, try again!');
                }
            });
        })
    </script>
}